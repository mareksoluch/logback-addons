buildscript {
    ext.your_name = 'Marek Soluch'
    ext.your_email = 'marek.soluch@gmail.com'
    ext.your_github_name = 'mareksoluch'

    ext.project_name = 'logback-addons'
    ext.project_description = """Library adding some Json Providers to logback"""
    ext.project_group = 'org.solo'
    ext.project_artifact = 'logback-addons'
    ext.project_version = '0.2-SNAPSHOT'
    ext.project_license = 'The Apache Software License, Version 2.0' // the full license name
    ext.project_license_tag = 'Apache-2.0' // the license tag name
    ext.project_license_url = 'https://www.apache.org/licenses/LICENSE-2.0.txt' // link to the license

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0'
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7"
}

group = project_group
version = project_version

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'maven-publish'
apply plugin: 'org.junit.platform.gradle.plugin'

sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile 'net.logstash.logback:logstash-logback-encoder:4.7'
    compile 'ch.qos.logback:logback-classic:1.1.8'
    testCompile 'org.assertj:assertj-core:3.6.2'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testCompile 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.1.0'
    testCompile 'org.mockito:mockito-core:2.15.0'
    testCompile 'com.google.guava:guava:24.0-jre'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.skyscreamer:jsonassert:1.5.0'
    testRuntime 'org.junit.vintage:junit-vintage-engine:5.1.0'

    // Enable use of the JUnitPlatform Runner within the IDE
    testCompile 'org.junit.platform:junit-platform-runner:1.1.0'
}

junitPlatform {
    details 'tree'

    filters {
        includeClassNamePatterns '.*Test', '.*Should'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar, sourcesJar
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            groupId project_group
            artifactId project_artifact
            version project_version
            artifact sourcesJar
            artifact javadocJar
            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name project_name
                    description project_description
                    url "https://github.com/$your_github_name/$project_name"
                    scm {
                        url "https://github.com/$your_github_name/$project_name"
                        connection "scm:git:git://github.com/$your_github_name/${project_name}.git"
                        developerConnection "scm:git:ssh:git@github.com:$your_github_name/${project_name}.git"
                    }
                    licenses {
                        license {
                            name project_license
                            url project_license_url
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id your_github_name
                            name your_name
                            email your_email
                        }
                    }
                }
            }
        }
    }
}


bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    publications = ['maven']
    pkg {
        repo = 'maven'
        name = project_name
        desc = project_description
        licenses = [project_license_tag]
        publicDownloadNumbers = true
        websiteUrl = "https://github.com/$your_github_name/$project_name"
        issueTrackerUrl = "https://github.com/$your_github_name/$project_name/issues"
        vcsUrl = "https://github.com/$your_github_name/${project_name}.git"
        githubRepo = "$your_github_name/$project_name"
        version {
            name = project_version
            vcsTag = project_version
            gpg {
                sign = true
            }
        }
    }
}
